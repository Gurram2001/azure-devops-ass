trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureServiceConnection: 'Your-Service-Connection-Name'
  environment: 'dev'

steps:
- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: '$(azureServiceConnection)'
    backendAzureRmResourceGroupName: '<your-tfstate-rg>'
    backendAzureRmStorageAccountName: '<your-tfstate-storage>'
    backendAzureRmContainerName: 'tfstate'
    backendAzureRmKey: 'terraform.tfstate'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra'

- task: TerraformTaskV4@4
  inputs:
    provider: 'azurerm'
    command: 'apply'
    environmentServiceNameAzureRM: '$(azureServiceConnection)'
    workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
    varsFile: 'terraform.tfvars'
    ensureBackend: true
    args: '-auto-approve'

- task: AzureWebApp@1
  inputs:
    azureSubscription: '$(azureServiceConnection)'
    appType: 'webApp'
    appName: '<your-app-name>'
    package: '$(Pipeline.Workspace)/drop/**/*.zip'
